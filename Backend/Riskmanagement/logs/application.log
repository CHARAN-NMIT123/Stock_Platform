2025-02-03T10:06:27.974+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] c.s.R.RiskmanagementApplication          : Starting RiskmanagementApplication using Java 21.0.5 with PID 9908 (C:\Users\2366885\OneDrive - Cognizant\Documents\Clone\Riskmanagement\target\classes started by 2366885 in C:\Users\2366885\OneDrive - Cognizant\Documents\Clone\Riskmanagement)
2025-02-03T10:06:27.997+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] c.s.R.RiskmanagementApplication          : No active profile set, falling back to 1 default profile: "default"
2025-02-03T10:06:28.105+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-02-03T10:06:28.106+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-02-03T10:06:30.767+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-02-03T10:06:30.933+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 136 ms. Found 3 JPA repository interfaces.
2025-02-03T10:06:32.646+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 5050 (http)
2025-02-03T10:06:32.670+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-02-03T10:06:32.670+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-02-03T10:06:32.808+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-02-03T10:06:32.809+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4702 ms
2025-02-03T10:06:33.299+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-02-03T10:06:33.437+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.4.Final
2025-02-03T10:06:33.518+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-02-03T10:06:34.139+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-02-03T10:06:34.196+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-02-03T10:06:34.743+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@a0b502
2025-02-03T10:06:34.747+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-02-03T10:06:34.835+05:30  WARN 9908 --- [Riskmanagement] [restartedMain] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-02-03T10:06:34.869+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.4
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-02-03T10:06:36.598+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-02-03T10:06:36.687+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-02-03T10:06:37.602+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-02-03T10:06:37.604+05:30  WARN 9908 --- [Riskmanagement] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-02-03T10:06:37.888+05:30  WARN 9908 --- [Riskmanagement] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-02-03T10:06:38.731+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.s.v.b.OptionalValidatorFactoryBean     : Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-02-03T10:06:39.470+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-02-03T10:06:39.543+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 5050 (http) with context path '/'
2025-02-03T10:06:39.552+05:30  INFO 9908 --- [Riskmanagement] [restartedMain] c.s.R.RiskmanagementApplication          : Started RiskmanagementApplication in 12.266 seconds (process running for 14.054)
2025-02-03T10:13:50.665+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-02-03T10:13:50.665+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-02-03T10:13:50.667+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-02-03T10:13:50.800+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: MyUser com.stocks.Riskmanagement.service.MyUserDetailsService.addNewUser(MyUser)
2025-02-03T10:13:50.801+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [MyUser(username=ArkaUser, password=$2a$10$Tps0wNWU/WMH8ZSawiCw4e8nZonMdg0Anv90ps/9zbRq.krhBCT3i, roles=TRADER)]
2025-02-03T10:13:50.982+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: addNewUser
2025-02-03T10:13:50.982+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: MyUser(username=ArkaUser, password=$2a$10$VbtBc7KKBCiPyqBEhD55UO693ClPxXxxVz22RvKAgORd72gpxDyHK, roles=TRADER)
2025-02-03T10:19:31.597+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:19:31.598+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:19:31.632+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:19:31.632+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:19:31.633+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:19:31.633+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:19:31.645+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:19:31.645+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:19:31.645+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:19:31.645+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:19:31.649+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:19:31.649+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:19:31.665+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:19:31.670+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=422, accountId=US8700, dateOfOrder=2025-02-03T10:19:31.530736500, numShares=0, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=375, stopLoss=450, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:19:31.670+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:19:31.679+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=422, accBalance=0, riskPerTrade=375, stopLoss=450, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:19:31.679+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:19:31.679+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=422, accBalance=0, riskPerTrade=375, stopLoss=450, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:19:31.723+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:19:31.723+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI5593, orderID=422, accBalance=0, riskPerTrade=375, stopLoss=450, riskPoint=50, numOfShares=7, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:20:16.121+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:20:16.121+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:20:16.124+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:20:16.124+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:20:16.124+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:20:16.124+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:20:16.130+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:20:16.130+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:20:16.130+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:20:16.130+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:20:16.135+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:20:16.135+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:20:16.138+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:20:16.138+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=423, accountId=US8700, dateOfOrder=2025-02-03T10:20:16.089543500, numShares=0, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=375, stopLoss=450, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:20:16.138+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:20:16.138+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=423, accBalance=0, riskPerTrade=375, stopLoss=450, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:20:16.140+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:20:16.140+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=423, accBalance=0, riskPerTrade=375, stopLoss=450, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:20:16.150+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:20:16.150+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI5905, orderID=423, accBalance=0, riskPerTrade=375, stopLoss=450, riskPoint=50, numOfShares=7, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:22:55.826+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:22:55.826+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:22:55.830+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:22:55.830+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:22:55.831+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:22:55.831+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:22:55.838+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:22:55.838+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:22:55.838+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:22:55.838+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:22:55.846+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:22:55.846+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:22:55.848+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:22:55.849+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=425, accountId=US8700, dateOfOrder=2025-02-03T10:22:55.800429700, numShares=100, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=250, stopLoss=480, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:22:55.849+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:22:55.850+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=425, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=0, numOfShares=100, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:22:55.850+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:22:55.850+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=425, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=0, numOfShares=100, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:22:55.864+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:22:55.865+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI7451, orderID=425, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=20, numOfShares=12, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:22:59.239+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:22:59.240+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:22:59.244+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:22:59.244+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:22:59.245+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:22:59.245+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:22:59.255+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:22:59.255+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:22:59.256+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:22:59.256+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:22:59.261+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:22:59.262+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:22:59.264+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:22:59.265+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=426, accountId=US8700, dateOfOrder=2025-02-03T10:22:59.200502200, numShares=100, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=250, stopLoss=480, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:22:59.265+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:22:59.265+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=426, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=0, numOfShares=100, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:22:59.265+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:22:59.265+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=426, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=0, numOfShares=100, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:22:59.279+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:22:59.280+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI1838, orderID=426, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=20, numOfShares=12, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:28:10.691+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:28:10.691+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:28:10.695+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:28:10.695+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:28:10.695+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:28:10.695+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:28:10.700+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:28:10.700+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:28:10.700+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:28:10.700+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:28:10.703+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:28:10.703+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:28:10.705+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:28:10.705+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=427, accountId=US8700, dateOfOrder=2025-02-03T10:28:10.673432900, numShares=0, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=250, stopLoss=480, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:28:10.705+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:28:10.706+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=427, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:28:10.706+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:28:10.706+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=427, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:28:10.718+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:28:10.718+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI3059, orderID=427, accBalance=0, riskPerTrade=250, stopLoss=480, riskPoint=20, numOfShares=12, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:28:45.022+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:28:45.022+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:28:45.024+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:28:45.024+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:28:45.024+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:28:45.025+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:28:45.030+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:28:45.031+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:28:45.031+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:28:45.031+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:28:45.034+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:28:45.034+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:28:45.035+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:28:45.036+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=428, accountId=US8700, dateOfOrder=2025-02-03T10:28:44.986171700, numShares=0, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=200, stopLoss=480, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:28:45.036+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:28:45.036+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=428, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:28:45.036+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:28:45.036+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=428, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:28:45.047+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:28:45.047+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI5453, orderID=428, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=20, numOfShares=10, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:34:20.624+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:34:20.624+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:34:20.627+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:34:20.627+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:34:20.627+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:34:20.627+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:34:20.632+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:34:20.632+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:34:20.632+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:34:20.632+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:34:20.635+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:34:20.635+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:34:20.638+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:34:20.638+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=429, accountId=US8700, dateOfOrder=2025-02-03T10:34:20.610198300, numShares=1, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=200, stopLoss=480, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:34:20.638+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:34:20.638+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=429, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=1, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:34:20.638+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:34:20.638+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=429, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=1, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:34:20.650+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:34:20.650+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI1696, orderID=429, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=20, numOfShares=10, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:36:38.908+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:36:38.908+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:36:38.911+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:36:38.911+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:36:38.911+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:36:38.911+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:36:38.922+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:36:38.922+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:36:38.922+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:36:38.922+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:36:38.929+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:36:38.929+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:36:38.932+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:36:38.932+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=430, accountId=US8700, dateOfOrder=2025-02-03T10:36:38.875207400, numShares=0, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=200, stopLoss=480, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:36:38.933+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:36:38.933+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=430, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:36:38.933+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:36:38.933+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=430, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:36:38.948+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:36:38.948+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI9601, orderID=430, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=20, numOfShares=10, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:36:58.826+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:36:58.826+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:36:58.830+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:36:58.830+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:36:58.830+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:36:58.830+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:36:58.835+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:36:58.836+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:36:58.836+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:36:58.836+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:36:58.840+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:36:58.841+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:36:58.843+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:36:58.843+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=431, accountId=US8700, dateOfOrder=2025-02-03T10:36:58.792925500, numShares=0, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=200, stopLoss=480, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:36:58.843+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:36:58.843+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=431, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:36:58.843+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:36:58.843+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=431, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:36:58.855+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:36:58.855+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI3173, orderID=431, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=20, numOfShares=10, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:38:12.542+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:38:12.542+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:38:12.546+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:38:12.546+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:38:12.547+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:38:12.547+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:38:12.553+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:38:12.555+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:38:12.555+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:38:12.555+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:38:12.563+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:38:12.563+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:38:12.565+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:38:12.565+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=432, accountId=US8700, dateOfOrder=2025-02-03T10:38:12.496804600, numShares=0, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=200, stopLoss=480, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T10:38:12.566+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:38:12.566+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=432, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:38:12.566+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:38:12.566+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=432, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:38:12.578+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:38:12.579+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI6862, orderID=432, accBalance=0, riskPerTrade=200, stopLoss=480, riskPoint=20, numOfShares=10, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:43:09.790+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:43:09.790+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:43:09.793+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:43:09.794+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:43:09.794+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:43:09.794+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:43:09.801+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:43:09.802+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:43:09.802+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:43:09.802+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:43:09.806+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:43:09.806+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:43:09.808+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:43:09.809+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=433, accountId=US8700, dateOfOrder=2025-02-03T10:43:09.771540100, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=buy, balance=0, riskPerTrade=220, stopLoss=1000, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, transStatus=success, status=true)]
2025-02-03T10:43:09.809+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:43:09.809+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=433, accBalance=0, riskPerTrade=220, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:43:09.809+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:43:09.809+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=433, accBalance=0, riskPerTrade=220, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:43:09.821+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:43:09.822+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-9] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI8385, orderID=433, accBalance=0, riskPerTrade=220, stopLoss=1000, riskPoint=100, numOfShares=2, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:46:10.697+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:46:10.698+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao]
2025-02-03T10:46:10.701+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:46:10.701+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:46:10.701+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:46:10.701+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:46:10.707+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:46:10.707+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:46:10.707+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:46:10.707+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1NzgzNSwiZXhwIjoxNzM4NTYxNDM1fQ.Pkj9zY4focffJRWPCQIbfClOGFyfLhkxN9uEKfHfnao, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:46:10.710+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:46:10.710+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:46:10.711+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:46:10.711+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=434, accountId=US8700, dateOfOrder=2025-02-03T10:46:10.683001900, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=buy, balance=0, riskPerTrade=220, stopLoss=1000, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, transStatus=success, status=true)]
2025-02-03T10:46:10.711+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:46:10.711+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=434, accBalance=0, riskPerTrade=220, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:46:10.711+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:46:10.712+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=434, accBalance=0, riskPerTrade=220, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:46:10.721+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:46:10.721+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-1] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI4309, orderID=434, accBalance=0, riskPerTrade=220, stopLoss=1000, riskPoint=100, numOfShares=2, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:52:24.281+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:52:24.281+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1OTkwNiwiZXhwIjoxNzM4NTYzNTA2fQ.zbf-3oUoPvRsYzr7oszSjOSrHr-TBm_etvrQ9aNadYg]
2025-02-03T10:52:24.286+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:52:24.286+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:52:24.286+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:52:24.286+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:52:24.296+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:52:24.296+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:52:24.296+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:52:24.296+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1OTkwNiwiZXhwIjoxNzM4NTYzNTA2fQ.zbf-3oUoPvRsYzr7oszSjOSrHr-TBm_etvrQ9aNadYg, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:52:24.301+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:52:24.301+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:52:24.303+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:52:24.304+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=435, accountId=US8700, dateOfOrder=2025-02-03T05:20:59.143, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=buy, balance=10, riskPerTrade=220, stopLoss=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, transStatus=success, status=true)]
2025-02-03T10:52:24.304+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:52:24.304+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=435, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:52:24.304+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:52:24.304+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=435, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:52:24.313+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:52:24.313+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI5350, orderID=435, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=1100, numOfShares=1, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:54:11.799+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:54:11.800+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1OTkwNiwiZXhwIjoxNzM4NTYzNTA2fQ.zbf-3oUoPvRsYzr7oszSjOSrHr-TBm_etvrQ9aNadYg]
2025-02-03T10:54:11.802+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:54:11.802+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:54:11.804+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:54:11.804+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:54:11.809+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:54:11.810+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:54:11.810+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:54:11.810+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1OTkwNiwiZXhwIjoxNzM4NTYzNTA2fQ.zbf-3oUoPvRsYzr7oszSjOSrHr-TBm_etvrQ9aNadYg, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:54:11.815+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:54:11.816+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:54:11.818+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:54:11.819+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=436, accountId=US8700, dateOfOrder=2025-02-03T05:20:59.143, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=buy, balance=10, riskPerTrade=220, stopLoss=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, transStatus=success, status=true)]
2025-02-03T10:54:11.819+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:54:11.819+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=436, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:54:11.819+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:54:11.819+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=436, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:54:11.828+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:54:11.828+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI0396, orderID=436, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=1100, numOfShares=1, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:55:03.937+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T10:55:03.938+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1OTkwNiwiZXhwIjoxNzM4NTYzNTA2fQ.zbf-3oUoPvRsYzr7oszSjOSrHr-TBm_etvrQ9aNadYg]
2025-02-03T10:55:03.938+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T10:55:03.938+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T10:55:03.938+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T10:55:03.938+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T10:55:03.943+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T10:55:03.943+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T10:55:03.943+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T10:55:03.943+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU1OTkwNiwiZXhwIjoxNzM4NTYzNTA2fQ.zbf-3oUoPvRsYzr7oszSjOSrHr-TBm_etvrQ9aNadYg, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T10:55:03.947+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T10:55:03.947+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T10:55:03.949+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T10:55:03.949+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=437, accountId=US8700, dateOfOrder=2025-02-03T05:20:59.143, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=buy, balance=10, riskPerTrade=220, stopLoss=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, transStatus=success, status=true)]
2025-02-03T10:55:03.949+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T10:55:03.949+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=437, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T10:55:03.949+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T10:55:03.949+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=437, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T10:55:03.954+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T10:55:03.954+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-6] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI8958, orderID=437, accBalance=10, riskPerTrade=220, stopLoss=0, riskPoint=1100, numOfShares=1, typeOfPurchase=positionSizing, typeOfSell=marketPlan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:00:18.822+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T11:00:18.823+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM]
2025-02-03T11:00:18.827+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T11:00:18.827+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T11:00:18.828+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T11:00:18.828+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T11:00:18.837+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T11:00:18.837+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T11:00:18.838+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T11:00:18.838+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T11:00:18.846+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T11:00:18.846+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T11:00:18.849+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T11:00:18.850+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=438, accountId=US8700, dateOfOrder=2025-02-03T11:00:18.798705200, numShares=0, stockId=1, symbol=TIME, stockName=titan, transType=buy, balance=0, riskPerTrade=225, stopLoss=450, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, transStatus=success, status=true)]
2025-02-03T11:00:18.850+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T11:00:18.850+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=438, accBalance=0, riskPerTrade=225, stopLoss=450, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:00:18.850+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T11:00:18.850+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=438, accBalance=0, riskPerTrade=225, stopLoss=450, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T11:00:18.862+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T11:00:18.862+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-8] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI1706, orderID=438, accBalance=0, riskPerTrade=225, stopLoss=450, riskPoint=50, numOfShares=4, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=500.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:15:14.973+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T11:15:14.973+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM]
2025-02-03T11:15:14.977+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T11:15:14.977+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T11:15:14.978+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T11:15:14.978+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T11:15:14.986+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T11:15:14.986+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T11:15:14.986+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T11:15:14.987+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T11:15:14.994+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T11:15:14.994+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T11:15:14.996+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T11:15:14.996+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=439, accountId=US8700, dateOfOrder=2025-02-03T11:15:14.951472500, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=buy, balance=0, riskPerTrade=275, stopLoss=1000, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, transStatus=success, status=true)]
2025-02-03T11:15:14.996+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T11:15:14.996+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=439, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:15:14.996+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T11:15:14.996+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=439, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T11:15:15.007+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T11:15:15.007+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-10] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI3444, orderID=439, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=100, numOfShares=2, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:20:00.792+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T11:20:00.792+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM]
2025-02-03T11:20:00.794+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T11:20:00.795+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T11:20:00.795+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T11:20:00.795+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T11:20:00.803+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T11:20:00.803+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T11:20:00.803+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T11:20:00.803+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T11:20:00.811+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T11:20:00.811+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T11:20:00.815+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T11:20:00.815+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=445, accountId=US8700, dateOfOrder=2025-02-03T11:20:00.769868600, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=buy, balance=0, riskPerTrade=275, stopLoss=1000, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, transStatus=success, status=true)]
2025-02-03T11:20:00.815+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T11:20:00.815+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=445, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:20:00.815+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T11:20:00.815+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=445, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T11:20:00.827+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T11:20:00.828+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-2] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI2234, orderID=445, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=100, numOfShares=2, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:20:07.621+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T11:20:07.621+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM]
2025-02-03T11:20:07.623+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T11:20:07.623+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T11:20:07.623+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T11:20:07.623+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T11:20:07.628+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T11:20:07.628+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T11:20:07.628+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T11:20:07.628+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T11:20:07.633+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T11:20:07.633+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T11:20:07.645+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T11:20:07.645+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=446, accountId=US8700, dateOfOrder=2025-02-03T11:20:07.601082900, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=SELL, balance=0, riskPerTrade=0, stopLoss=1000, typeOfPurchase=marketplan, typeOfSell=stoploss, entryPrice=11000.0, transStatus=success, status=true)]
2025-02-03T11:20:07.645+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T11:20:07.645+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=446, accBalance=0, riskPerTrade=0, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=marketplan, typeOfSell=stoploss, entryPrice=11000.0, dateOfRiskCalc=null, transType=SELL)
2025-02-03T11:20:07.646+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.handleStopLoss(RiskCalculatorDTO,double)
2025-02-03T11:20:07.646+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=446, accBalance=0, riskPerTrade=0, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=marketplan, typeOfSell=stoploss, entryPrice=11000.0, dateOfRiskCalc=null, transType=SELL), 11000.0]
2025-02-03T11:20:07.667+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: handleStopLoss
2025-02-03T11:20:07.667+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-3] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI4918, orderID=446, accBalance=0, riskPerTrade=0, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=marketplan, typeOfSell=stoploss, entryPrice=11000.0, dateOfRiskCalc=null, transType=SELL)
2025-02-03T11:20:13.202+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: String com.stocks.Riskmanagement.service.JwtService.extractUsername(String)
2025-02-03T11:20:13.202+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM]
2025-02-03T11:20:13.205+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: extractUsername
2025-02-03T11:20:13.205+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: ArkaUser
2025-02-03T11:20:13.205+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: UserDetails com.stocks.Riskmanagement.service.MyUserDetailsService.loadUserByUsername(String)
2025-02-03T11:20:13.205+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [ArkaUser]
2025-02-03T11:20:13.214+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: loadUserByUsername
2025-02-03T11:20:13.215+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]
2025-02-03T11:20:13.215+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: Boolean com.stocks.Riskmanagement.service.JwtService.validateToken(String,UserDetails)
2025-02-03T11:20:13.215+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBcmthVXNlciIsImlhdCI6MTczODU2MDMyMiwiZXhwIjoxNzM4NTYzOTIyfQ.r36jdHtRbTEQa7oZ-kHKduY9ln3joOi5AP6PAMifpXM, org.springframework.security.core.userdetails.User [Username=ArkaUser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[TRADER]]]
2025-02-03T11:20:13.221+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: validateToken
2025-02-03T11:20:13.221+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: true
2025-02-03T11:20:13.223+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.processOrderToRisk(OrderDTO)
2025-02-03T11:20:13.223+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [OrderDTO(orderId=447, accountId=US8700, dateOfOrder=2025-02-03T11:20:13.168260800, numShares=0, stockId=2, symbol=HYO, stockName=Google, transType=buy, balance=0, riskPerTrade=275, stopLoss=1000, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, transStatus=success, status=true)]
2025-02-03T11:20:13.224+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: processOrderToRisk
2025-02-03T11:20:13.224+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=null, orderID=447, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:20:13.224+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: RiskCalculatorDTO com.stocks.Riskmanagement.service.RiskCalculatorService.calculatePositionSizing(RiskCalculatorDTO)
2025-02-03T11:20:13.224+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [RiskCalculatorDTO(riskID=null, orderID=447, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=0, numOfShares=0, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)]
2025-02-03T11:20:13.237+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: calculatePositionSizing
2025-02-03T11:20:13.238+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-4] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: RiskCalculatorDTO(riskID=RI3648, orderID=447, accBalance=0, riskPerTrade=275, stopLoss=1000, riskPoint=100, numOfShares=2, typeOfPurchase=positionSizing, typeOfSell=marketplan, entryPrice=1100.0, dateOfRiskCalc=null, transType=buy)
2025-02-03T11:21:01.961+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: MyUser com.stocks.Riskmanagement.service.MyUserDetailsService.addNewUser(MyUser)
2025-02-03T11:21:01.961+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [MyUser(username=ArkaAdmin, password=$2a$10$2KkKgLiZPcYxg27nTrCCjeKsRLZB2ssslq0024eNMK9pq.ZXjpRGK, roles=TRADER)]
2025-02-03T11:21:02.113+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: addNewUser
2025-02-03T11:21:02.113+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-5] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: MyUser(username=ArkaAdmin, password=$2a$10$5nXkNGQYw97Rgr7KA3Y0XuJmGgoHUELi/M3Lgv02IopufDm5cFL9W, roles=TRADER)
2025-02-03T11:21:38.571+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Executing method: MyUser com.stocks.Riskmanagement.service.MyUserDetailsService.addNewUser(MyUser)
2025-02-03T11:21:38.571+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Arguments: [MyUser(username=ArkaAdmin, password=$2a$10$yZYQIxP/i5fE/1jvWMHT1uv77xs3vVPeXvu8b.qFbHmgKD/V/z20u, roles=STOCKADMIN)]
2025-02-03T11:21:38.739+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method executed: addNewUser
2025-02-03T11:21:38.739+05:30  INFO 9908 --- [Riskmanagement] [http-nio-5050-exec-7] c.s.Riskmanagement.aspect.LoggerAspect   : Method result: MyUser(username=ArkaAdmin, password=$2a$10$sYqtCbdQDwYmwkgPGlPKtuaShu/TIhEzUoB3OBW.XGiiFmwdTuwZW, roles=STOCKADMIN)
